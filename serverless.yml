service: s3uploader
# app and org for use with dashboard.serverless.com
app: s3uploader
#org: kyle138

frameworkVersion: '2'
package:
  patterns:
    - '!README.md'
    - '!LICENSE'
    - '!config/config_example.json'
    - '!static/**'
#    - include-me.js
#    - include-me-dir/**

custom:
  stage: ${opt:stage, "dev1"}
  s3config: ${file(./config/config.json):${self:custom.stage}}

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  memorySize: 128
  timeout: 180
  region: us-east-1
  stage: ${self:custom.stage}
  httpApi:
    cors: true
  environment:
    S3BUCKET: ${self:custom.s3config.bucket}
# IAM policies
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:GetBucketLocation"
        - "s3:PutObject"
        - "s3:GetObject"
        - "s3:AbortMultipartUpload"
        - "s3:ListBucketMultipartUploads"
        - "s3:ListMultipartUploadParts"
      Resource: arn:aws:s3:::${self:custom.s3config.bucket}*

# layers
layers:
  commonModules:
    path: layers/CommonModules
    compatibleRuntimes:
      - nodejs14.x
    name: ${self:provider.stage}-s3uploader-commonModules
    description: "s3client s3presigner create-response-object"

functions:
  initiator:
    handler: lambdas/initiator.handler
    description: "triggered by APIG, initiates anonymous S3 multipart upload, returns UploadId and Key."
    timeout: 28
    layers:
      - {Ref: CommonModulesLambdaLayer}
    events:
      - httpApi: 'POST /post/initiate'
  presigner:
    handler: lambdas/presigner.handler
    description: "triggered by APIG, returns presigned URLs for putPart anonymous upload to S3 bucket."
    environment:
      EXPUP: ${self:custom.s3config.expup}
    timeout: 28
    layers:
      - {Ref: CommonModulesLambdaLayer}
    events:
      - httpApi: 'POST /post/presign'
  terminator:
    handler: lambdas/terminator.handler
    description: "triggered by APIG, Completes the multipart upload."
    environment:
      EXPDN: ${self:custom.s3config.expdn}
    timeout: 28
    layers:
      - {Ref: CommonModulesLambdaLayer}
    events:
      - httpApi: 'POST /post/terminate'
  cancelator:
    handler: lambdas/cancelator.handler
    description: "triggered by APIG, Aborts the multipart upload."
    timeout: 28
    layers:
      - {Ref: CommonModulesLambdaLayer}
    events:
      - httpApi: 'POST /post/cancelate'
#      - s3: ${env:BUCKET}

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
